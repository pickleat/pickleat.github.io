{"expireTime":9007200844385777000,"key":"transformer-remark-markdown-ast-6b51ff34c73df49efbc2a62ac2bea9df--","val":{"type":"root","children":[{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Problem: Recieving HTML with nested children of an unknown depth that need to be formatted with CSS classes.","position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":111,"offset":111},"indent":[]}}],"position":{"start":{"line":2,"column":3,"offset":3},"end":{"line":2,"column":111,"offset":111},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":111,"offset":111},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"I've had this problem arise twice in the past several weeks. The first occassion I created a quick brute force solution, and the second time I was able to refactor the solution to solve the problem more elegantly and in a far better depth.","position":{"start":{"line":4,"column":1,"offset":113},"end":{"line":4,"column":240,"offset":352},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":113},"end":{"line":4,"column":240,"offset":352},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"A little about the projects, they are both in ","position":{"start":{"line":6,"column":1,"offset":354},"end":{"line":6,"column":47,"offset":400},"indent":[]}},{"type":"link","title":null,"url":"http://reactjs.org/","children":[{"type":"text","value":"React","position":{"start":{"line":6,"column":48,"offset":401},"end":{"line":6,"column":53,"offset":406},"indent":[]}}],"position":{"start":{"line":6,"column":47,"offset":400},"end":{"line":6,"column":75,"offset":428},"indent":[]}},{"type":"text","value":", one is Create-React-App and the other is Gatsby, but both use ","position":{"start":{"line":6,"column":75,"offset":428},"end":{"line":6,"column":139,"offset":492},"indent":[]}},{"type":"link","title":null,"url":"tailwindcss.com","children":[{"type":"text","value":"Tailwind CSS","position":{"start":{"line":6,"column":140,"offset":493},"end":{"line":6,"column":152,"offset":505},"indent":[]}}],"position":{"start":{"line":6,"column":139,"offset":492},"end":{"line":6,"column":170,"offset":523},"indent":[]}},{"type":"text","value":".\nThe first occassion I was working with ","position":{"start":{"line":6,"column":170,"offset":523},"end":{"line":7,"column":40,"offset":564},"indent":[1]}},{"type":"link","title":null,"url":"https://quilljs.com/","children":[{"type":"text","value":"QuillJS","position":{"start":{"line":7,"column":41,"offset":565},"end":{"line":7,"column":48,"offset":572},"indent":[]}}],"position":{"start":{"line":7,"column":40,"offset":564},"end":{"line":7,"column":71,"offset":595},"indent":[]}},{"type":"text","value":", an open-source WYSIWYG editor. It is a very powerful and pretty easy to get used to using. It provides \"pure\" HTML, so a \"Heading 1\" will be an ","position":{"start":{"line":7,"column":71,"offset":595},"end":{"line":7,"column":217,"offset":741},"indent":[]}},{"type":"inlineCode","value":"<h1>","position":{"start":{"line":7,"column":217,"offset":741},"end":{"line":7,"column":223,"offset":747},"indent":[]}},{"type":"text","value":", ","position":{"start":{"line":7,"column":223,"offset":747},"end":{"line":7,"column":225,"offset":749},"indent":[]}},{"type":"strong","children":[{"type":"text","value":"bold","position":{"start":{"line":7,"column":227,"offset":751},"end":{"line":7,"column":231,"offset":755},"indent":[]}}],"position":{"start":{"line":7,"column":225,"offset":749},"end":{"line":7,"column":233,"offset":757},"indent":[]}},{"type":"text","value":" text is provided wrapped in ","position":{"start":{"line":7,"column":233,"offset":757},"end":{"line":7,"column":262,"offset":786},"indent":[]}},{"type":"inlineCode","value":"<strong>","position":{"start":{"line":7,"column":262,"offset":786},"end":{"line":7,"column":272,"offset":796},"indent":[]}},{"type":"text","value":" tags, lists are provided in ","position":{"start":{"line":7,"column":272,"offset":796},"end":{"line":7,"column":301,"offset":825},"indent":[]}},{"type":"inlineCode","value":"<ol>","position":{"start":{"line":7,"column":301,"offset":825},"end":{"line":7,"column":307,"offset":831},"indent":[]}},{"type":"text","value":" and ","position":{"start":{"line":7,"column":307,"offset":831},"end":{"line":7,"column":312,"offset":836},"indent":[]}},{"type":"inlineCode","value":"<ul>","position":{"start":{"line":7,"column":312,"offset":836},"end":{"line":7,"column":318,"offset":842},"indent":[]}},{"type":"text","value":", etc...","position":{"start":{"line":7,"column":318,"offset":842},"end":{"line":7,"column":326,"offset":850},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":354},"end":{"line":7,"column":326,"offset":850},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Here's an example of what could be provided from a user typing an input in the editor.","position":{"start":{"line":9,"column":1,"offset":852},"end":{"line":9,"column":87,"offset":938},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":852},"end":{"line":9,"column":87,"offset":938},"indent":[]}},{"type":"code","lang":"html","meta":null,"value":"<div>\n    <h1>An Example Heading!</h1>\n    <p><br></p>\n    <p>Here's a bunch of paragraph text that shows you\n    <strong>how awesome it is</strong>\n    to write here!</p>\n    <p><br></p>\n    <p>Here's a list: </p>\n    <ul>\n        <li>Item</li>\n        <li>Another Item</li\n        ><li>A Third Item</li>\n    </ul>\n    <p><br></p>\n</div>","position":{"start":{"line":11,"column":1,"offset":940},"end":{"line":28,"column":4,"offset":1291},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Easy right? Maybe? If you have a perfect CSS system or if you don't need to apply any classes dynamically...","position":{"start":{"line":30,"column":1,"offset":1293},"end":{"line":30,"column":109,"offset":1401},"indent":[]}}],"position":{"start":{"line":30,"column":1,"offset":1293},"end":{"line":30,"column":109,"offset":1401},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The Brute Force Solution","position":{"start":{"line":32,"column":4,"offset":1406},"end":{"line":32,"column":28,"offset":1430},"indent":[]}}],"position":{"start":{"line":32,"column":1,"offset":1403},"end":{"line":32,"column":28,"offset":1430},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"The small problem arises with nesting of elements. You end up with elements nesting 3 or more layers deep. I specifically found a problem of a ","position":{"start":{"line":34,"column":1,"offset":1432},"end":{"line":34,"column":144,"offset":1575},"indent":[]}},{"type":"inlineCode","value":"<a>","position":{"start":{"line":34,"column":144,"offset":1575},"end":{"line":34,"column":149,"offset":1580},"indent":[]}},{"type":"text","value":" nested 3 child elements deep inside a ","position":{"start":{"line":34,"column":149,"offset":1580},"end":{"line":34,"column":188,"offset":1619},"indent":[]}},{"type":"inlineCode","value":"<ul>","position":{"start":{"line":34,"column":188,"offset":1619},"end":{"line":34,"column":194,"offset":1625},"indent":[]}},{"type":"text","value":" > ","position":{"start":{"line":34,"column":194,"offset":1625},"end":{"line":34,"column":197,"offset":1628},"indent":[]}},{"type":"inlineCode","value":"<li>","position":{"start":{"line":34,"column":197,"offset":1628},"end":{"line":34,"column":203,"offset":1634},"indent":[]}},{"type":"text","value":"...\nNot terrible, if you are ","position":{"start":{"line":34,"column":203,"offset":1634},"end":{"line":35,"column":26,"offset":1663},"indent":[1]}},{"type":"strong","children":[{"type":"text","value":"sure","position":{"start":{"line":35,"column":28,"offset":1665},"end":{"line":35,"column":32,"offset":1669},"indent":[]}}],"position":{"start":{"line":35,"column":26,"offset":1663},"end":{"line":35,"column":34,"offset":1671},"indent":[]}},{"type":"text","value":" of how the elements will be nested. After some looking I started to see patterns and created this first version to solve my problem.","position":{"start":{"line":35,"column":34,"offset":1671},"end":{"line":35,"column":167,"offset":1804},"indent":[]}}],"position":{"start":{"line":34,"column":1,"offset":1432},"end":{"line":35,"column":167,"offset":1804},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"First I created an object of the classes I wanted to apply to each tag. Reminder: we're using ","position":{"start":{"line":37,"column":1,"offset":1806},"end":{"line":37,"column":95,"offset":1900},"indent":[]}},{"type":"link","title":null,"url":"tailwindcss.com","children":[{"type":"text","value":"Tailwind CSS","position":{"start":{"line":37,"column":96,"offset":1901},"end":{"line":37,"column":108,"offset":1913},"indent":[]}}],"position":{"start":{"line":37,"column":95,"offset":1900},"end":{"line":37,"column":126,"offset":1931},"indent":[]}},{"type":"text","value":" utility classes.","position":{"start":{"line":37,"column":126,"offset":1931},"end":{"line":37,"column":143,"offset":1948},"indent":[]}}],"position":{"start":{"line":37,"column":1,"offset":1806},"end":{"line":37,"column":143,"offset":1948},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":" const quillStyle = {\n    h1: 'text-blue-500 font-bold text-xl',\n    h2: 'text-blue-500 font-bold text-lg',\n    h3: 'text-blue-500 font-bold text-md',\n    a: 'text-teal-600 font-bold',\n    p: 'text-blue-300',\n    ol: 'list-decimal list-inside',\n    ul: 'list-disc list-inside',\n    li: 'pl-2 text-blue-300',\n  }","position":{"start":{"line":39,"column":1,"offset":1950},"end":{"line":51,"column":4,"offset":2272},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Then I created the function to recieve objects, and if it matches the ","position":{"start":{"line":53,"column":1,"offset":2274},"end":{"line":53,"column":71,"offset":2344},"indent":[]}},{"type":"inlineCode","value":"tagName","position":{"start":{"line":53,"column":71,"offset":2344},"end":{"line":53,"column":80,"offset":2353},"indent":[]}},{"type":"text","value":" and then looking up and apply the corresponding styles.\nAll of this is wrapped in a ","position":{"start":{"line":53,"column":80,"offset":2353},"end":{"line":54,"column":29,"offset":2438},"indent":[1]}},{"type":"inlineCode","value":"useEffect()","position":{"start":{"line":54,"column":29,"offset":2438},"end":{"line":54,"column":42,"offset":2451},"indent":[]}},{"type":"text","value":" hook because we are gathering the QuillJS WYSIWYG Editor in a form.\nIt looked like this:","position":{"start":{"line":54,"column":42,"offset":2451},"end":{"line":55,"column":21,"offset":2540},"indent":[1]}}],"position":{"start":{"line":53,"column":1,"offset":2274},"end":{"line":55,"column":21,"offset":2540},"indent":[1,1]}},{"type":"code","lang":"js","meta":null,"value":"useEffect(() => {\n    // Cleans up the text provided by QuillJS wysiwyg\n    function styleChildren(children) {\n      children.forEach((child) => {\n        if (child.tagName === 'H1') {\n          child.classList = quillStyle.h1\n        }\n        if (child.tagName === 'H2') {\n          child.classList = quillStyle.h2\n        }\n        if (child.tagName === 'H3') {\n          child.classList = quillStyle.h3\n        }\n        if (child.tagName === 'P') {\n          child.classList = quillStyle.p\n        }\n        if (child.tagName === 'A') {\n          child.classList = quillStyle.a\n        }\n        if (child.tagName === 'OL') {\n          child.classList = quillStyle.ol\n          let listItems = [...child.children]\n          listItems.forEach((listItem) => {\n            listItem.classList = quillStyle.li\n          })\n        }\n        if (child.tagName === 'UL') {\n          child.classList = quillStyle.ul\n          let listItems = [...child.children]\n          listItems.forEach((listItem) => {\n            listItem.classList = quillStyle.li\n          })\n        }\n        if (child.tagName === 'LI') {\n          child.classList = quillStyle.li\n        }\n      })\n    }\n    var jobDesc = document.getElementById('jobDesc')\n    var jobChildren = [...jobDesc.children]\n    styleChildren(jobChildren)\n    // removed other code that doesn't apply to this post...\n  })","position":{"start":{"line":57,"column":1,"offset":2542},"end":{"line":101,"column":4,"offset":3923},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"You can see its very much a brute force, and not very elegant. But hey, it got the job done.\nThe struggle initially was that I wasn't sure exactly how deeply nested the html elements would be. However I solved the problem for the time being and moved on to other parts of the application. ","position":{"start":{"line":103,"column":1,"offset":3925},"end":{"line":104,"column":197,"offset":4214},"indent":[1]}}],"position":{"start":{"line":103,"column":1,"offset":3925},"end":{"line":104,"column":197,"offset":4214},"indent":[1]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"The More Elegant Solution","position":{"start":{"line":106,"column":4,"offset":4219},"end":{"line":106,"column":29,"offset":4244},"indent":[]}}],"position":{"start":{"line":106,"column":1,"offset":4216},"end":{"line":106,"column":29,"offset":4244},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":106,"column":29,"offset":4244}}}}